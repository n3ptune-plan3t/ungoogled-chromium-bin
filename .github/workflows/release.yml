name: Manual Build and Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The release version tag to create (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-deploy:
    name: Build, Deploy to Repo, and Release
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --security-opt seccomp=unconfined
    
    permissions:
      contents: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed \
            base-devel git gtk3 nss alsa-lib xdg-utils libxss libcups \
            ttf-liberation libpulse libva desktop-file-utils hicolor-icon-theme \
            fontconfig libjpeg-turbo flac libwebp minizip opus harfbuzz \
            libxslt libpng freetype2

      - name: Set correct permissions for makepkg
        run: |
          useradd -m builduser
          chown -R builduser:builduser .

      - name: Build the package as builduser
        run: sudo -u builduser makepkg -sf --noconfirm

      # MODIFIED: This step now handles split packages by selecting the main binary.
      - name: Get main package filename
        id: get_filename
        run: |
          # Find the specific binary package file, ignoring debug or other variants.
          PKG_FILE=$(find . -maxdepth 1 -name "ungoogled-chromium-bin-*.pkg.tar.zst")

          if [ -z "$PKG_FILE" ] || [ $(echo "$PKG_FILE" | wc -l) -ne 1 ]; then
            echo "::error::Could not find exactly one main package file (ungoogled-chromium-bin-*.pkg.tar.zst)."
            echo "Listing current directory contents:"
            ls -l
            exit 1
          fi
          
          echo "Found package: $PKG_FILE"
          echo "PKG_NAME=$(basename $PKG_FILE)" >> $GITHUB_ENV
      
      - name: Checkout pacman repo
        uses: actions/checkout@v4
        with:
          repository: 'n3ptune-plan3t/custom-arch-repo'
          ref: 'main'
          path: 'repo'
          token: ${{ secrets.MY_REPO_PAT }}

      - name: Update Arch repository
        run: |
          mkdir -p repo/x86_64
          mv ${{ env.PKG_NAME }} repo/x86_64/
          repo-add repo/custom-arch-repo.db.tar.gz repo/x86_64/${{ env.PKG_NAME }}
          
      - name: Commit and push repository changes
        run: |
          cd repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update repository: add ${{ env.PKG_NAME }}"
            git push
          else
            echo "No changes to the repository to commit."
          fi
          cd ..

      - name: Create and push Git tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: "repo/x86_64/${{ env.PKG_NAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
